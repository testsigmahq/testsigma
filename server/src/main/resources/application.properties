server.port=${TESTSIGMA_SERVER_PORT:9090}
server.url=${TESTSIGMA_SERVER_URL:https://local.testsigmaos.com}
server.version=v1.4`.0
server.local.url=${TESTSIGMA_SERVER_LOCAL_URL:http://localhost:${server.port}}
local.agent.url=${LOCAL_AGENT_URL:http://localhost:9393/agent}
local.agent.download.tag=latest
docker.env=${IS_DOCKER_ENV:false}
testsigma.platform.url=${TESTSIGMA_PLATFORM_URL:https://os-services.testsigma.com}
ts.root.dir=${TS_DATA_DIR:/opt/app/ts_data}
ts.disable.telemetry=${DISABLE_TELEMETRY: false}
authentication.type=${AUTH_TYPE:FORM}
authentication.form.username=${TESTSIGMA_USERNAME:admin@sample.com}
authentication.form.password=${TESTSIGMA_PASSWORD:admin}
authentication.api.key=${API_KEY:#{T(java.util.UUID).randomUUID().toString().replaceAll("-", "")}}
authentication.api.enabled:${API_ENABLED:true}
authentication.google.clientId=${GOOGLE_OAUTH2_CLIENT_ID:839030163760-13rmsn0ntc7qforth8bth0l3vjvmnvp6.apps.googleusercontent.com}
authentication.google.clientSecret=${GOOGLE_OAUTH2_CLIENT_SECRET:1pEfaH3QRl5hQG23VhI6vg9q}
authentication.jwt.secret=${JWT_SECRET:#{T(java.util.UUID).randomUUID().toString().replaceAll("-", "")}}
# Session
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
session.cookie_name=X-AUTH
session.jwt_secret=SecretKeyToGenJWTs
server.http2.enabled=true
server.forward-headers-strategy=framework
# Database
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://${MYSQL_HOST_NAME:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB_NAME:testsigma_opensource}?useSSL=false
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.metadata_builder_contributor=com.testsigma.hibernate.query.function.SqlFunctionsMetadataBuilderContributor
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.javax.persistence.sharedCache.mode=NONE
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.type=trace
spring.jpa.properties.connection.autoReconnect=true
spring.jpa.properties.connection.autoReconnectForPools=true
spring.jpa.properties.connection.is-connection-validation-required=true
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.connection.useUnicode=true
spring.jpa.properties.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.use_sql_comments=false
spring.flyway.enabled=false
spring.flyway.placeholderReplacement=false
#Spring
logging.level.org.springframework.boot.autoconfigure=ERROR
logging.level.org.springframework.boot.autoconfigure.logging=INFO
spring.servlet.multipart.location=/
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
spring.servlet.multipart.file-size-threshold=500MB
spring.servlet.multipart.enabled=true
#Number of acceptor threads to use. When the value is -1, the default, the number of acceptors is derived from the operating environment.
server.jetty.threads.acceptors=200
#Number of selector threads to use. When the value is -1, the default, the number of selectors is derived from the operating environment.
server.jetty.threads.selectors=100
#Maximum thread idle time.
server.jetty.threads.idle-timeout=60000ms
#Maximum number of threads.
server.jetty.threads.max=4096
#Maximum capacity of the thread pool's backing queue. A default is computed based on the threading configuration.
server.jetty.threads.max-queue-capacity=1000
#Minimum number of threads.
server.jetty.threads.min=1000
server.requests.body.log=true
